{"remainingRequest":"/Users/robert/project/vue/通用vue3/project/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/通用vue3/project/node_modules/eslint-loader/index.js??ref--13-0!/Users/robert/project/vue/通用vue3/project/src/util/index.js","dependencies":[{"path":"/Users/robert/project/vue/通用vue3/project/src/util/index.js","mtime":1557238913585},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/robert/project/vue/\\u901A\\u7528vue3/project/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport _import from '@/router/_import'; // 数组转树\n\nvar arrayToTree = function arrayToTree(data, parentId, id) {\n  data.sort(function (a, b) {\n    return a[parentId] - b[id];\n  }); // 存储对象\n\n  var midObj = {}; // 从后向前遍历\n\n  for (var i = data.length - 1; i >= 0; i--) {\n    var item = data[i]; // 当前的父id\n\n    var nowPid = item[parentId]; // 当前id\n\n    var nowId = item[id]; // 建立当前节点的父节点的children数组\n    // 如果父节点已经存在就往原数组中添加\n\n    if (midObj[nowPid]) {\n      midObj[nowPid].push(item);\n    } else {\n      midObj[nowPid] = [];\n      midObj[nowPid].push(item);\n    } // 将children放入合适的位置\n\n\n    if (midObj[nowId]) {\n      item.children = midObj[nowId];\n      delete midObj[nowId];\n    }\n  }\n\n  data.filter(function (list) {\n    return list[parentId] == 0;\n  });\n  return data;\n}; // 动态添加路由\n\n\nvar addRouter = function addRouter(routerlist) {\n  var router = [];\n  routerlist.forEach(function (e) {\n    var e_new = {\n      path: e.url,\n      name: e.name,\n      component: _import(e.name)\n    };\n\n    if (e.children) {\n      e_new = _Object$assign({}, e_new, {\n        children: addRouter(e.children)\n      });\n    }\n\n    if (e.redirect) {\n      e_new = _Object$assign({}, e_new, {\n        redirect: e.redirect\n      });\n    }\n\n    if (e.generatemenu == 0) {\n      e_new = _Object$assign({}, e_new, {\n        hidden: true\n      });\n    }\n\n    if (e.icon !== '' && e.title !== '') {\n      e_new = _Object$assign({}, e_new, {\n        meta: {\n          title: e.title,\n          icon: e.icon\n        }\n      });\n    } else if (e.title !== '' && e.icon === '') {\n      e_new = _Object$assign({}, e_new, {\n        meta: {\n          title: e.title\n        }\n      });\n    }\n\n    router.push(e_new);\n  });\n  return router;\n};\n\nexport default {\n  arrayToTree: arrayToTree,\n  addRouter: addRouter\n};",{"version":3,"sources":["/Users/robert/project/vue/通用vue3/project/src/util/index.js"],"names":["_import","arrayToTree","data","parentId","id","sort","a","b","midObj","i","length","item","nowPid","nowId","push","children","filter","list","addRouter","routerlist","router","forEach","e","e_new","path","url","name","component","redirect","generatemenu","hidden","icon","title","meta"],"mappings":"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","sourcesContent":["import _import from '@/router/_import'\n// 数组转树\nlet arrayToTree = (data,parentId,id)=>{\n    data.sort((a,b)=>{\n        return a[parentId]-b[id]\n    })\n    // 存储对象\n    let midObj = {}\n    // 从后向前遍历\n    for(let i = data.length-1; i>=0; i--){\n        let item = data[i]\n        // 当前的父id\n        let nowPid = item[parentId]\n        // 当前id\n        let nowId = item[id]\n\n        // 建立当前节点的父节点的children数组\n        // 如果父节点已经存在就往原数组中添加\n        if(midObj[nowPid]){\n            midObj[nowPid].push(item)\n        }else {\n            midObj[nowPid] = []\n            midObj[nowPid].push(item)\n        }\n\n        // 将children放入合适的位置\n        if(midObj[nowId]){\n            item.children = midObj[nowId]\n            delete midObj[nowId]\n        }\n    }\n    data.filter((list)=>{\n        return list[parentId] == 0\n    })\n    return data\n}\n// 动态添加路由\nlet  addRouter = (routerlist) =>{\n    const router = []\n    routerlist.forEach(e => {\n      let e_new = {\n        path: e.url,\n        name: e.name,\n        component: _import(e.name)\n      }\n      if (e.children) {\n        e_new = Object.assign({},e_new,{ children: addRouter(e.children) })\n      }\n      if (e.redirect) {\n        e_new = Object.assign({}, e_new, { redirect: e.redirect })\n      }\n      if (e.generatemenu == 0) {\n        e_new = Object.assign({}, e_new, { hidden: true })\n      }\n      if (e.icon !== '' && e.title !== '') {\n        e_new = Object.assign({}, e_new, {\n          meta: { title: e.title, icon: e.icon }\n        })\n      } else if (e.title !== '' && e.icon === '') {\n        e_new = Object.assign({}, e_new, { meta: { title: e.title }})\n      }\n      router.push(e_new)\n    })\n    return router\n  }\n\nexport default {\n    arrayToTree,\n    addRouter\n}"]}]}