{"remainingRequest":"/Users/robert/project/vue/通用vue3/project/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/通用vue3/project/node_modules/eslint-loader/index.js??ref--13-0!/Users/robert/project/vue/通用vue3/project/src/utils/request.js","dependencies":[{"path":"/Users/robert/project/vue/通用vue3/project/src/utils/request.js","mtime":1557294894473},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/通用vue3/project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/robert/project/vue/\\u901A\\u7528vue3/project/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport Vue from 'vue';\nimport store from '../store';\nimport { getToken } from '@/utils/auth';\nvar vm = new Vue(); // 创建axios实例\n\nvar service = axios.create({\n  // todo\n  baseURL: 'https://easy-mock.com/mock/5950a2419adc231f356a6636/',\n  // api 的 base_url\n  timeout: 5000 // 请求超时时间\n\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  if (store.getters.token) {\n    // todo\n    config.headers['X-Token'] = getToken(); // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n\n  return config;\n}, function (error) {\n  _Promise.reject(error);\n}); // response 拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\n   * code为非20000是抛错 可结合自己业务进行修改\n   */\n  var res = response.data;\n\n  if (res.code !== 20000) {\n    vm.$message.error(res.message, 5); // todo\n    // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n\n    if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n      vm.$message.error('Token过期,被登出'); // 调用接口强制登出\n\n      store.dispatch('FedLogOut').then(function () {\n        location.reload(); // 为了重新实例化vue-router对象 避免bug\n      });\n    }\n\n    return _Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  vm.$message.error(error.message, 5);\n  return _Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["/Users/robert/project/vue/通用vue3/project/src/utils/request.js"],"names":["axios","Vue","store","getToken","vm","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","error","reject","response","res","data","code","$message","message","dispatch","then","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,IAAMC,EAAE,GAAG,IAAIH,GAAJ,EAAX,C,CACA;;AACA,IAAMI,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC3B;AACAC,EAAAA,OAAO,EAAE,sDAFkB;AAEsC;AACjEC,EAAAA,OAAO,EAAE,IAHkB,CAGb;;AAHa,CAAb,CAAhB,C,CAMA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR,MAAIV,KAAK,CAACW,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,SAAf,IAA4BZ,QAAQ,EAApC,CAFuB,CAEgB;AACxC;;AACD,SAAOS,MAAP;AACD,CAPH,EAQE,UAAAI,KAAK,EAAI;AACP,WAAQC,MAAR,CAAeD,KAAf;AACD,CAVH,E,CAaA;;AACAX,OAAO,CAACI,YAAR,CAAqBS,QAArB,CAA8BP,GAA9B,CACE,UAAAO,QAAQ,EAAI;AACV;;;AAGA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,KAAjB,EAAwB;AACtBjB,IAAAA,EAAE,CAACkB,QAAH,CAAYN,KAAZ,CAAkBG,GAAG,CAACI,OAAtB,EAA8B,CAA9B,EADsB,CAEtB;AACA;;AACA,QAAIJ,GAAG,CAACE,IAAJ,KAAa,KAAb,IAAsBF,GAAG,CAACE,IAAJ,KAAa,KAAnC,IAA4CF,GAAG,CAACE,IAAJ,KAAa,KAA7D,EAAoE;AAClEjB,MAAAA,EAAE,CAACkB,QAAH,CAAYN,KAAZ,CAAkB,aAAlB,EADkE,CAElE;;AACAd,MAAAA,KAAK,CAACsB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCC,QAAAA,QAAQ,CAACC,MAAT,GADqC,CACnB;AACnB,OAFD;AAGD;;AACD,WAAO,SAAQV,MAAR,CAAe,OAAf,CAAP;AACD,GAZD,MAYO;AACL,WAAOC,QAAQ,CAACE,IAAhB;AACD;AACF,CArBH,EAsBE,UAAAJ,KAAK,EAAI;AACPZ,EAAAA,EAAE,CAACkB,QAAH,CAAYN,KAAZ,CAAkBA,KAAK,CAACO,OAAxB,EAAgC,CAAhC;AACA,SAAO,SAAQN,MAAR,CAAeD,KAAf,CAAP;AACD,CAzBH;AA4BA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\nimport Vue from 'vue'\nimport store from '../store'\nimport { getToken } from '@/utils/auth'\nconst vm = new Vue()\n// 创建axios实例\nconst service = axios.create({\n  // todo\n  baseURL: 'https://easy-mock.com/mock/5950a2419adc231f356a6636/', // api 的 base_url\n  timeout: 5000 // 请求超时时间\n})\n\n// request拦截器\nservice.interceptors.request.use(\n  config => {\n    if (store.getters.token) {\n      // todo\n      config.headers['X-Token'] = getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\n    }\n    return config\n  },\n  error => {\n    Promise.reject(error)\n  }\n)\n\n// response 拦截器\nservice.interceptors.response.use(\n  response => {\n    /**\n     * code为非20000是抛错 可结合自己业务进行修改\n     */\n    const res = response.data\n    if (res.code !== 20000) {\n      vm.$message.error(res.message,5)\n      // todo\n      // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n      if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n        vm.$message.error('Token过期,被登出')\n        // 调用接口强制登出\n        store.dispatch('FedLogOut').then(() => {\n          location.reload() // 为了重新实例化vue-router对象 避免bug\n        })\n      }\n      return Promise.reject('error')\n    } else {\n      return response.data\n    }\n  },\n  error => {\n    vm.$message.error(error.message,5)\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}